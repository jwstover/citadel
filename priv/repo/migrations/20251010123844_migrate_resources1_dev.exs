defmodule Citadel.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:tasks, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :title, :text, null: false
      add :description, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :task_state_id, :uuid, null: false
      add :user_id, :uuid, null: false
    end

    create table(:task_states, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
    end

    alter table(:tasks) do
      modify :task_state_id,
             references(:task_states,
               column: :id,
               name: "tasks_task_state_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :user_id,
             references(:users,
               column: :id,
               name: "tasks_user_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:task_states) do
      add :name, :text, null: false
      add :description, :text
      add :order, :bigint, null: false
      add :is_complete, :boolean, default: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    alter table(:task_states) do
      remove :updated_at
      remove :inserted_at
      remove :is_complete
      remove :order
      remove :description
      remove :name
    end

    drop constraint(:tasks, "tasks_task_state_id_fkey")

    drop constraint(:tasks, "tasks_user_id_fkey")

    alter table(:tasks) do
      modify :user_id, :uuid
      modify :task_state_id, :uuid
    end

    drop table(:task_states)

    drop table(:tasks)
  end
end
